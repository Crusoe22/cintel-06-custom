[{"name": "app.py", "content": "import pandas as pd\nfrom faicons import icon_svg\nfrom shiny import reactive\nfrom shiny.express import input, render, ui\nfrom shiny.ui import output_ui\nfrom shinywidgets import render_plotly\nimport plotly.express as px\nfrom pathlib import Path\nimport seaborn as sns\n\n# Load the Seaborn tips dataset\ntips = sns.load_dataset(\"tips\")\n\n# Default to the last 6 months\nend = pd.Timestamp.now()\nstart = end - pd.Timedelta(weeks=26)\n\nui.page_opts(title=\"Tip Determination Explorer\", fillable=True)\n\nwith ui.sidebar():\n    ui.input_selectize(\"sex\", \"Select Sex\", choices=list(tips[\"sex\"].unique()), selected=\"Male\")\n    ui.input_selectize(\"day\", \"Select Day\", choices=list(tips[\"day\"].unique()), selected=\"Sun\")\n    ui.input_slider(\"n\", \"Number of bins\", 0, 100, 20)\n\n    ui.h6(\"Github Links:\")\n    ui.a(\n        \"GitHub Source\",\n        href=\"https://github.com/Crusoe22/cintel-06-custom\",\n        target=\"_blank\",\n        style=\"color: #007bff;\",\n    )\n    \n    ui.a(\n        \"GitHub App\",\n        href=\"https://github.com/Crusoe22/cintel-06-custom/blob/main/dashboard/app.py\",\n        target=\"_blank\",\n        style=\"color: #007bff;\",\n    )\n\n# Define a function to get data as a pandas DataFrame\ndef get_dataframe():\n    selected_sex = input.sex()\n    selected_day = input.day()\n    return tips[(tips[\"sex\"] == selected_sex) & (tips[\"day\"] == selected_day)]\n\n\n# Define a function to get the stock data\n@reactive.calc\ndef get_data():\n    return get_dataframe()\n\nwith ui.layout_column_wrap(fill=False, height=75):\n    with ui.value_box(showcase=icon_svg(\"dollar-sign\")):\n        \"Summary of Bills Selected\"\n\n        @render.ui\n        def total_bill():\n            selected_day = input.day()  # Get the selected day\n            selected_sex = input.sex()  # Get the selected sex\n            selected_data = tips[(tips[\"day\"] == selected_day) & (tips[\"sex\"] == selected_sex)]  # Filter data by selected day and sex\n            sum_of_bills = selected_data[\"total_bill\"].sum()  # Calculate sum of bills\n            return f\"{sum_of_bills:.2f}\"\n\n\nwith ui.layout_columns(row_heights=None, col_widths=None):\n    with ui.card(full_screen=True):\n        ui.card_header(\"Total Bill vs. Tip\")\n\n        @render_plotly\n        def total_bill_vs_tip():\n            fig = px.scatter(\n                get_data(),\n                x=\"total_bill\",\n                y=\"tip\",\n                color=\"sex\",\n                title=\"Total Bill vs. Tip\",\n            )\n            fig.update_layout(\n                hovermode=\"closest\",\n                paper_bgcolor=\"rgba(0,0,0,0)\",\n                plot_bgcolor=\"rgba(0,0,0,0)\",\n            )\n            return fig\n\n\n    with ui.card():\n        ui.card_header(\"Tip Distribution\")\n\n        @render_plotly\n        def tip_distribution():\n            return px.histogram(\n                get_data(),\n                x=\"tip\",\n                nbins=input.n(),\n                title=\"Tip Distribution\",\n                labels={\"tip\": \"Tip Amount\"},\n            )\n\n\nwith ui.layout_columns(height=300, col_widths=12):\n    with ui.card():\n        ui.card_header(\"Tips Data\")\n\n        @render.data_frame\n        def tips_data():\n            data = get_data()  # Get the tips data\n            if data is not None:\n                return render.DataGrid(data)  # Render the DataGrid with the tips data\n\nui.include_css(Path(__file__).parent / \"styles.css\")\n\n@reactive.calc\ndef get_data():\n    return get_dataframe()\n\n\nwith ui.hold():\n\n    @render.ui\n    def change_icon():\n        icon = icon_svg(\"arrow-up\")\n        icon.add_class(\"text-success\")\n        return icon", "type": "text"}, {"name": "sex_type.py", "content": "sex = {\n    \"Male\": \"Male\",\n    \"Female\": \"Female\",\n}", "type": "text"}, {"name": "styles.css", "content": ":root {\n    --bslib-sidebar-main-bg: #f8f8f8;\n  }\n  \n  .plotly .modebar-container {\n    display: none !important;\n  }", "type": "text"}]